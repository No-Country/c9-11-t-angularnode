//! Do not edit this file manually, it is generate by `prisma repo generator`

import { PrismaClient, Prisma, Users,
 Role,
 Products,
 Categories, } from '@prisma/client';
import _ from 'lodash';

// eslint-disable-next-line @typescript-eslint/no-explicit-any
export type AnyRecord = Record<string, any>;

export type BaseOption<Include, Select> = {
  include?: Include;
  select?: Select;
};

export type Find<Select, Include, Cursor, Order, Distinct> = BaseOption<Include, Select> & {
  cursor?: Cursor;
  take?: number;
  skip?: number;
  orderBy?: Prisma.Enumerable<Order>;
  distinct?: Distinct;
};

export type CountArgs<Select, Cursor, Order, Distinct> = Omit<
  Find<Select, never, Cursor, Order, Distinct>,
  'include'
>;

export type Aggregate<Cursor, Order, Distinct> = Omit<
  CountArgs<never, Cursor, Order, Distinct>,
  'select' | 'distinct'
>;

export const prisma = new PrismaClient({
  log: [],
});

export const models = _.omit(prisma, [
  '$on',
  '$connect',
  '$disconnect',
  '$use',
  '$executeRaw',
  '$executeRawUnsafe',
  '$queryRaw',
  '$queryRawUnsafe',
  '$transaction',
]);

export const MODELS_NAME = {
  USERS: 'users',
  ROLE: 'role',
  PRODUCTS: 'products',
  CATEGORIES: 'categories',
} as const;

// eslint-disable-next-line @typescript-eslint/ban-types
export type ModelStructure = {
  users: Users;
  role: Role;
  products: Products;
  categories: Categories;
};

export type ModelName = keyof ModelStructure;

export type ModelScalarFields<T extends keyof ModelStructure> = Prisma.Enumerable<
  keyof ModelStructure[T]
>;

export type ModelDelegate = Prisma.RejectOnNotFound | Prisma.RejectPerOperation | undefined;

export type ModelTypes = {
  users: {
    Where: Prisma.UsersWhereInput;
    Select: Prisma.UsersSelect;
    Include: Prisma.UsersInclude;
    Create: Prisma.UsersCreateInput | Prisma.UsersUncheckedCreateInput;
    Update: Prisma.UsersUpdateInput | Prisma.UsersUncheckedUpdateInput;
    Cursor: Prisma.UsersWhereUniqueInput;
    Order: Prisma.UsersOrderByWithRelationInput;
    Delegate: Prisma.UsersDelegate<ModelDelegate>;
    GroupBy: Prisma.UsersGroupByOutputType;
  },
  role: {
    Where: Prisma.RoleWhereInput;
    Select: Prisma.RoleSelect;
    Include: Prisma.RoleInclude;
    Create: Prisma.RoleCreateInput | Prisma.RoleUncheckedCreateInput;
    Update: Prisma.RoleUpdateInput | Prisma.RoleUncheckedUpdateInput;
    Cursor: Prisma.RoleWhereUniqueInput;
    Order: Prisma.RoleOrderByWithRelationInput;
    Delegate: Prisma.RoleDelegate<ModelDelegate>;
    GroupBy: Prisma.RoleGroupByOutputType;
  },
  products: {
    Where: Prisma.ProductsWhereInput;
    Select: Prisma.ProductsSelect;
    Include: Prisma.ProductsInclude;
    Create: Prisma.ProductsCreateInput | Prisma.ProductsUncheckedCreateInput;
    Update: Prisma.ProductsUpdateInput | Prisma.ProductsUncheckedUpdateInput;
    Cursor: Prisma.ProductsWhereUniqueInput;
    Order: Prisma.ProductsOrderByWithRelationInput;
    Delegate: Prisma.ProductsDelegate<ModelDelegate>;
    GroupBy: Prisma.ProductsGroupByOutputType;
  },
  categories: {
    Where: Prisma.CategoriesWhereInput;
    Select: Prisma.CategoriesSelect;
    Include: Prisma.CategoriesInclude;
    Create: Prisma.CategoriesCreateInput | Prisma.CategoriesUncheckedCreateInput;
    Update: Prisma.CategoriesUpdateInput | Prisma.CategoriesUncheckedUpdateInput;
    Cursor: Prisma.CategoriesWhereUniqueInput;
    Order: Prisma.CategoriesOrderByWithRelationInput;
    Delegate: Prisma.CategoriesDelegate<ModelDelegate>;
    GroupBy: Prisma.CategoriesGroupByOutputType;
  },
};
